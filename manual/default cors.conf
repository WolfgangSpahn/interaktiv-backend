server {
    listen 80;
    
    # Proxy requests to prophysik (now renamed) with no CORS needed
    location /prophysik/ {
        proxy_pass http://localhost:5000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # No CORS headers here, as prophysik doesn't need CORS.
    }

    # Static files for prophysik
    location /prophysik/static/ {
        alias /usr/share/nginx/html/prophysik/static/;
    }

    # Proxy requests to interaktiv with CORS enabled
    location /interaktiv/ {
        proxy_pass http://localhost:5050/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Disable buffering to test streaming responses
        proxy_buffering off;

        # Add flush header for early flush behavior
        add_header X-Accel-Buffering no;

        # Increase timeouts to support long-lived connections like SSE
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_connect_timeout 3600s;

        # Dynamically set the CORS origin based on the request's origin
        set $cors_origin '';

        if ($http_origin ~* (https?://(localhost:4443|wolfgang-spahn.github.io))) {
            set $cors_origin $http_origin;
        }

        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept' always;

        # Allow credentials
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Handle preflight requests (OPTIONS method)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 204;
        }
    }

    # Static files for interaktiv-server
    location /interaktiv/static/ {
        alias /usr/share/nginx/html/interaktiv/static/;
    }

    # Health check endpoint for AWS ELB
    location /health {
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}